{
  "version": 3,
  "sources": ["../spoofing/canvas.js", "../config.js", "../spoofing/utils.js", "../spoofing/webgl.js", "../spoofing/fonts.js", "../spoofing/navigator.js", "../spoofing/plugins.js", "../spoofing/index.js", "../injector.js"],
  "sourcesContent": ["import { createPRNG, log, logError } from './utils.js';\nimport { MODULE_CONFIG } from '../config.js';\n\n// Store original methods for restoration\nconst originalMethods = {\n  getImageData: null,\n  toDataURL: null,\n  getContext: null\n};\n\n// Module state\nlet canvas_prng = null;\nlet canvas_sessionSeed = null;\nlet canvas_isPatched = false;\nlet lastStatus = {};\n\nfunction getRuntimeSessionSeed() {\n  // Try to get the seed from the injector global\n  if (typeof window !== 'undefined' && window.__obscuraSessionSeed) {\n    return window.__obscuraSessionSeed;\n  }\n  // Fallback: generate a new session seed (same as injector)\n  try {\n    let entropy = '' + (navigator.userAgent || '') + (navigator.language || '') + (performance && performance.now ? performance.now() : '') + Math.random() + Date.now();\n    let hash = 2166136261;\n    for (let i = 0; i < entropy.length; i++) {\n      hash ^= entropy.charCodeAt(i);\n      hash = Math.imul(hash, 16777619);\n    }\n    return hash >>> 0;\n  } catch (e) {\n    return Math.floor(Math.random() * 4294967296);\n  }\n}\n\n\nfunction applyCanvasTransform(ctx, prng, config) {\n  const scaleX = 1 + prng.randomRange(-0.002, 0.002);\n  const scaleY = 1 + prng.randomRange(-0.002, 0.002);\n  const translateX = prng.randomRange(-0.3, 0.3);\n  const translateY = prng.randomRange(-0.3, 0.3);\n  const rotate = prng.randomRange(-0.002, 0.002);\n  ctx.translate(translateX, translateY);\n  ctx.rotate(rotate);\n  ctx.scale(scaleX, scaleY);\n}\n\nfunction spoofGetImageData(originalFn, sx, sy, sw, sh, config) {\n  const imageData = originalFn.call(this, sx, sy, sw, sh);\n  const canvasEl = this.canvas;\n  const contentFingerprint = `${canvasEl.width}x${canvasEl.height}:${imageData.data[0]}${imageData.data[100] ?? ''}${imageData.data[1000] ?? ''}`;\n  const contentHash = canvas_prng.hash(contentFingerprint);\n  const contentPRNG = createPRNG(canvas_sessionSeed ^ contentHash);\n  const { data } = imageData;\n  const pixelNoiseRange = config.pixelNoiseRange;\n  const alphaNoiseRange = config.alphaNoiseRange;\n  for (let i = 0; i < data.length; i += 4) {\n    const rNoise = contentPRNG.randomInt(-pixelNoiseRange, pixelNoiseRange);\n    const gNoise = contentPRNG.randomInt(-pixelNoiseRange, pixelNoiseRange);\n    const bNoise = contentPRNG.randomInt(-pixelNoiseRange, pixelNoiseRange);\n    data[i] = Math.max(0, Math.min(255, data[i] + rNoise));\n    data[i + 1] = Math.max(0, Math.min(255, data[i + 1] + gNoise));\n    data[i + 2] = Math.max(0, Math.min(255, data[i + 2] + bNoise));\n    if (data[i + 3] === 255) {\n      const aNoise = contentPRNG.randomInt(0, alphaNoiseRange);\n      data[i + 3] = 255 - aNoise;\n    }\n  }\n  return imageData;\n}\n\nfunction spoofToDataURL(originalFn, type, quality, config) {\n  const canvasEl = this;\n  const tempCanvas = document.createElement('canvas');\n  tempCanvas.width = canvasEl.width;\n  tempCanvas.height = canvasEl.height;\n  const tempCtx = tempCanvas.getContext('2d');\n  tempCtx.save();\n  applyCanvasTransform(tempCtx, canvas_prng, config);\n  tempCtx.drawImage(canvasEl, 0, 0);\n  tempCtx.restore();\n  return originalFn.call(tempCanvas, type, quality);\n}\n\nfunction spoofGetContext(originalFn, contextType, contextAttributes, config) {\n  if (contextType !== '2d') {\n    return originalFn.call(this, contextType, contextAttributes);\n  }\n  const ctx = originalFn.call(this, contextType, contextAttributes);\n  if (ctx.__obscura_processed) {\n    return ctx;\n  }\n  ctx.__obscura_processed = true;\n  const originalGetImageData = ctx.getImageData;\n  ctx.getImageData = function(sx, sy, sw, sh) {\n    try {\n      return spoofGetImageData.call(this, originalGetImageData, sx, sy, sw, sh, config);\n    } catch (err) {\n      logError('canvas', err, 'spoofGetImageData fallback');\n      return originalGetImageData.call(this, sx, sy, sw, sh);\n    }\n  };\n  return ctx;\n}\n\nfunction patchCanvas(config, personaSeed) {\n  if (canvas_isPatched) return false;\n  try {\n    originalMethods.getImageData = CanvasRenderingContext2D.prototype.getImageData;\n    originalMethods.toDataURL = HTMLCanvasElement.prototype.toDataURL;\n    originalMethods.getContext = HTMLCanvasElement.prototype.getContext;\n    CanvasRenderingContext2D.prototype.getImageData = function(sx, sy, sw, sh) {\n      try {\n        return spoofGetImageData.call(this, originalMethods.getImageData, sx, sy, sw, sh, config);\n      } catch (err) {\n        logError('canvas', err, 'patchCanvas.getImageData');\n        return originalMethods.getImageData.call(this, sx, sy, sw, sh);\n      }\n    };\n    HTMLCanvasElement.prototype.toDataURL = function(type, quality) {\n      try {\n        return spoofToDataURL.call(this, originalMethods.toDataURL, type, quality, config);\n      } catch (err) {\n        logError('canvas', err, 'patchCanvas.toDataURL');\n        return originalMethods.toDataURL.call(this, type, quality);\n      }\n    };\n    HTMLCanvasElement.prototype.getContext = function(contextType, contextAttributes) {\n      try {\n        return spoofGetContext.call(this, originalMethods.getContext, contextType, contextAttributes, config);\n      } catch (err) {\n        logError('canvas', err, 'patchCanvas.getContext');\n        return originalMethods.getContext.call(this, contextType, contextAttributes);\n      }\n    };\n    canvas_isPatched = true;\n    lastStatus = { patched: true };\n    return true;\n  } catch (err) {\n    logError('canvas', err, 'patchCanvas');\n    lastStatus = { error: err.message };\n    return false;\n  }\n}\n\nfunction unpatchCanvas() {\n  if (!canvas_isPatched) return false;\n  try {\n    if (originalMethods.getImageData) CanvasRenderingContext2D.prototype.getImageData = originalMethods.getImageData;\n    if (originalMethods.toDataURL) HTMLCanvasElement.prototype.toDataURL = originalMethods.toDataURL;\n    if (originalMethods.getContext) HTMLCanvasElement.prototype.getContext = originalMethods.getContext;\n    canvas_isPatched = false;\n    lastStatus = { patched: false };\n    return true;\n  } catch (err) {\n    logError('canvas', err, 'unpatchCanvas');\n    lastStatus = { error: err.message };\n    return false;\n  }\n}\n\nexport function patch(persona = {}) {\n  // Persona-driven config override\n  const config = Object.assign({}, MODULE_CONFIG.canvas, persona.canvas || {});\n  // Use persona seed if provided, otherwise get runtime session seed\n  canvas_sessionSeed = (persona.seed !== undefined) ? persona.seed : getRuntimeSessionSeed();\n  canvas_prng = createPRNG(canvas_sessionSeed);\n  return patchCanvas(config, canvas_sessionSeed);\n}\n\nexport function unpatch() {\n  return unpatchCanvas();\n}\n\nexport function getStatus() {\n  return { patched: canvas_isPatched, ...lastStatus };\n}\n\n// Auto-initialize if loaded directly in browser (not as a module)\nif (typeof window !== 'undefined' && (!window.obscura || !window.obscura.__initialized)) {\n  patch();\n}\n", "/**\n * Obscura - Anti-Fingerprinting Configuration\n * Centralized configuration for the Obscura spoofing system.\n */\n\n// Debug and Logging\nconst DEBUG_MODE = false; // Enable detailed logging\nconst LOG_LEVEL = DEBUG_MODE ? 'debug' : 'error'; // 'debug' | 'info' | 'warn' | 'error'\n\n// Core Behavior\nconst AUTO_PATCH = true; // Automatically patch fingerprinting surfaces on load\nconst STRICT_MODE = false; // Throw errors on spoofing failures instead of falling back to native\nconst PERSISTENT_SEED = true; // Use a consistent seed across page reloads (stored in sessionStorage)\n\n// Performance\nconst CACHE_ENABLED = true; // Enable caching for expensive operations\nconst CACHE_TTL = 5 * 60 * 1000; // 5 minutes cache TTL\n\n// Default Persona (can be overridden by passing a persona to patch())\nconst DEFAULT_PERSONA = {\n  // Will be merged with the selected persona from /personas/\n  // This allows for runtime overrides of specific fields\n};\n\n// PRNG Configuration\nconst PRNG_CONFIG = {\n  algorithm: 'xoshiro128**', // PRNG algorithm to use\n  seed: null, // Auto-generated if null\n};\n\n// Module-Specific Configurations\nconst MODULE_CONFIG = {\n  canvas: {\n    enabled: true,\n    noise: {\n      enabled: true,\n      strength: 0.02, // Noise strength (0-1)\n    },\n  },\n  webgl: {\n    enabled: true,\n    failIfNotSupported: false,\n  },\n  fonts: {\n    enabled: true,\n    extendNative: false, // Extend rather than replace system fonts\n  },\n  navigator: {\n    enabled: true,\n    spoofUserAgent: true,\n    spoofPlatform: true,\n    spoofLanguage: true,\n  },\n  plugins: {\n    enabled: true,\n    // List of plugins to expose (empty = use defaults)\n    plugins: [],\n  },\n};\n\n// Export the configuration\nexport {\n  DEBUG_MODE,\n  LOG_LEVEL,\n  AUTO_PATCH,\n  STRICT_MODE,\n  PERSISTENT_SEED,\n  CACHE_ENABLED,\n  CACHE_TTL,\n  DEFAULT_PERSONA,\n  PRNG_CONFIG,\n  MODULE_CONFIG,\n};\n", "/**\n * Obscura - Core Utilities\n * Shared utilities for the Obscura anti-fingerprinting system.\n */\n\nimport {\n  DEBUG_MODE,\n  LOG_LEVEL,\n  PERSISTENT_SEED,\n  PRNG_CONFIG,\n  CACHE_ENABLED,\n  CACHE_TTL,\n  STRICT_MODE,\n} from '../config.js';\n\n// =====================\n// Session Seed Handling\n// =====================\nconst SESSION_STORAGE_KEY = '__obscura_session_seed';\n\nexport function getSessionSeed() {\n  if (PERSISTENT_SEED && typeof sessionStorage !== 'undefined') {\n    let stored = sessionStorage.getItem(SESSION_STORAGE_KEY);\n    if (stored) return parseInt(stored, 10);\n  }\n  try {\n    let entropy = '' + navigator.userAgent + navigator.language + (performance.now ? performance.now() : '') + Math.random() + Date.now();\n    let hash = 2166136261;\n    for (let i = 0; i < entropy.length; i++) {\n      hash ^= entropy.charCodeAt(i);\n      hash = Math.imul(hash, 16777619);\n    }\n    let seed = hash >>> 0;\n    if (PERSISTENT_SEED && typeof sessionStorage !== 'undefined') {\n      sessionStorage.setItem(SESSION_STORAGE_KEY, seed.toString());\n    }\n    return seed;\n  } catch (e) {\n    return Math.floor(Math.random() * 4294967296);\n  }\n}\n\n// =====================\n// PRNG (xoshiro128**)\n// =====================\nexport function createPRNG(seed) {\n  // xoshiro128** implementation\n  let s = new Uint32Array(4);\n  s[0] = seed ^ 0xA3C59AC3;\n  s[1] = (seed << 13) | (seed >>> 19);\n  s[2] = (seed << 7) | (seed >>> 25);\n  s[3] = seed ^ 0x1C69B3F5;\n  function rotl(x, k) { return (x << k) | (x >>> (32 - k)); }\n  return function() {\n    const result = rotl(s[1] * 5, 7) * 9;\n    const t = s[1] << 9;\n    s[2] ^= s[0];\n    s[3] ^= s[1];\n    s[1] ^= s[2];\n    s[0] ^= s[3];\n    s[2] ^= t;\n    s[3] = rotl(s[3], 11);\n    return (result >>> 0) / 4294967296;\n  };\n}\n\n// =====================\n// Logging\n// =====================\nconst LOG_LEVELS = { debug: 0, info: 1, warn: 2, error: 3 };\nconst currentLogLevel = LOG_LEVELS[LOG_LEVEL] ?? LOG_LEVELS.error;\n\nexport function log(module, level, message, data) {\n  if (LOG_LEVELS[level] < currentLogLevel) return;\n  const timestamp = new Date().toISOString().slice(11, 23);\n  const prefix = `[Obscura:${module}:${level.toUpperCase()} ${timestamp}]`;\n  const logFn = console[level] || console.log;\n  if (data !== undefined) {\n    logFn(prefix, message, data);\n  } else {\n    logFn(prefix, message);\n  }\n}\n\nexport function logError(module, error, context = '') {\n  if (!DEBUG_MODE && !STRICT_MODE) return;\n  const timestamp = new Date().toISOString().slice(11, 23);\n  const prefix = `[Obscura:${module}:ERROR ${timestamp}]`;\n  if (context) {\n    console.error(prefix, context, error);\n  } else {\n    console.error(prefix, error);\n  }\n  if (STRICT_MODE) {\n    throw new Error(`[Obscura] Fatal error in ${module}: ${error.message || error}`);\n  }\n}\n\n// =====================\n// Caching\n// =====================\nconst cache = new Map();\n\nexport function withCache(key, fn, ttl = CACHE_TTL) {\n  if (!CACHE_ENABLED) return fn();\n  const now = Date.now();\n  const cached = cache.get(key);\n  if (cached && (now - cached.time) < ttl) {\n    return cached.value;\n  }\n  const value = fn();\n  cache.set(key, { value, time: now });\n  return value;\n}\n\nexport { cache };\n", "export function patch() {}\nexport function unpatch() {}\nexport function getStatus() { return {}; }\n", "export function patch() {}\nexport function unpatch() {}\nexport function getStatus() { return {}; }\n", "export function patch() {}\nexport function unpatch() {}\nexport function getStatus() { return {}; }\n", "export function patch() {}\nexport function unpatch() {}\nexport function getStatus() { return {}; }\n", "// Obscura Spoofing Module Registry\n// This file exports all spoofing modules for unified loading and management.\n\nimport * as canvas from './canvas.js';\nimport * as webgl from './webgl.js';\nimport * as fonts from './fonts.js';\nimport * as navigator from './navigator.js';\nimport * as plugins from './plugins.js';\n\nexport const modules = {\n  canvas,\n  webgl,\n  fonts,\n  navigator,\n  plugins\n};\n\n// For extensibility: allow dynamic registration of custom modules\nexport function registerModule(name, mod) {\n  modules[name] = mod;\n}\n", "// Obscura Central Injector\n// Responsible for orchestrating all spoofing modules and exposing the global API.\n\nimport { modules, registerModule } from './spoofing/index.js';\nimport { DEBUG_MODE, AUTO_PATCH } from './config.js';\n\n// Persona loading/validation (stubbed for now)\nfunction loadPersona() {\n  // Load from global or config\n  return window.__OBSCURA_PERSONA__ || {};\n}\n\n// Patch all modules\nfunction patchAll(options = {}) {\n  const persona = loadPersona();\n  Object.entries(modules).forEach(([name, mod]) => {\n    if (typeof mod.patch === 'function') {\n      try {\n        mod.patch(persona[name] || persona);\n      } catch (e) {\n        logIntegrationError(name, 'patch', e);\n      }\n    }\n  });\n}\n\n// Unpatch all modules\nfunction unpatchAll(options = {}) {\n  Object.entries(modules).forEach(([name, mod]) => {\n    if (typeof mod.unpatch === 'function') {\n      try {\n        mod.unpatch();\n      } catch (e) {\n        logIntegrationError(name, 'unpatch', e);\n      }\n    }\n  });\n}\n\n// Get status from all modules\nfunction getStatusAll() {\n  const status = {};\n  Object.entries(modules).forEach(([name, mod]) => {\n    if (typeof mod.getStatus === 'function') {\n      try {\n        status[name] = mod.getStatus();\n      } catch (e) {\n        status[name] = { error: e.message };\n        logIntegrationError(name, 'getStatus', e);\n      }\n    }\n  });\n  return status;\n}\n\nfunction logIntegrationError(module, fn, error) {\n  if (DEBUG_MODE) {\n    console.error(`[Obscura][Injector] Error in ${module}.${fn}:`, error);\n  }\n}\n\n// Expose global API\n(function () {\n  if (typeof window === 'undefined') return;\n  if (window.obscura && window.obscura.__initialized) return;\n\n  // =====================================================================\n  // Session Seed Generation (runtime, like original)\n  // =====================================================================\n  function generateSessionSeed() {\n    try {\n      let entropy = '' + navigator.userAgent + navigator.language + (performance.now ? performance.now() : '') + Math.random() + Date.now();\n      let hash = 2166136261;\n      for (let i = 0; i < entropy.length; i++) {\n        hash ^= entropy.charCodeAt(i);\n        hash = Math.imul(hash, 16777619);\n      }\n      return hash >>> 0;\n    } catch (e) {\n      return Math.floor(Math.random() * 4294967296);\n    }\n  }\n  const sessionSeed = generateSessionSeed();\n\n  // PatchAll now always uses runtime sessionSeed unless persona.seed is explicitly provided\n  function patchAll(persona = {}) {\n    persona.seed = (typeof persona.seed !== 'undefined') ? persona.seed : sessionSeed;\n    let allPatched = true;\n    for (const moduleName in moduleRegistry) {\n      try {\n        const mod = moduleRegistry[moduleName];\n        if (mod && typeof mod.patch === 'function') {\n          const result = mod.patch(persona);\n          if (result === false) allPatched = false;\n        }\n      } catch (err) {\n        logError('injector', err, `patchAll: ${moduleName}`);\n        allPatched = false;\n      }\n    }\n    return allPatched;\n  }\n\n  window.obscura = {\n    patch: patchAll,\n    unpatch: unpatchAll,\n    getStatus: getStatusAll,\n    registerModule,\n    __initialized: true,\n  };\n\n  // Immediately activate protections on script load\n  window.obscura.patch();\n})();\n\n"],
  "mappings": "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",
  "names": ["logError", "logError", "getStatus", "patch", "unpatch", "getStatus", "patch", "unpatch", "getStatus", "patch", "unpatch", "getStatus", "patch", "unpatch"]
}
